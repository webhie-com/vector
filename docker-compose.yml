version: '3.8'

services:
  # Production service
  vector:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - vector-network

  # Development service
  vector-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
    profiles:
      - dev
    networks:
      - vector-network

  # Redis cache (optional - for production caching)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    profiles:
      - cache
    networks:
      - vector-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    profiles:
      - monitoring
    networks:
      - vector-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3030:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    profiles:
      - monitoring
    networks:
      - vector-network
    depends_on:
      - prometheus

networks:
  vector-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data: